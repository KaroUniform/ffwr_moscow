from aiogram import Router, F, Bot
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import Message, BotCommand
from filters.role import RoleFilter
from models.jaynecobbdatabase import Chats
from aiogram.filters import Command

router = Router()
router.message.filter(F.text)
commands = [
    BotCommand(command='/voices', description="–í–∫–ª/–≤—ã–∫–ª –≥–æ–ª–æ—Å–æ–≤—ã–µ"),
]


@router.message(Command('voices'), RoleFilter('moderator'))
@router.message(Command('voices'), RoleFilter('admin'))
@router.message(Command('voices'), RoleFilter('owner'))
async def voice(message: Message, bot: Bot):
    
    chat = Chats.get(chat_id=message.chat.id)
    new_permissions = (await bot.get_chat(message.chat.id)).permissions
    new_permissions.can_send_voice_notes = not chat.remove_voices
    try:
        await bot.set_chat_permissions(
            chat_id=message.chat.id,
            use_independent_chat_permissions=True,
            permissions=new_permissions
        )
        await message.reply(text=f'–ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å {"üîä—Ä–∞–∑—Ä–µ—à–µ–Ω—ã" if not chat.remove_voices else "üîá–∑–∞–ø—Ä–µ—â–µ–Ω—ã"}') 
    
    except TelegramBadRequest:
        await message.reply(
            text=f'üò¢–ù–µ –∏–º–µ—é –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –≤ —á–∞—Ç–µ',
        )
    
    chat.remove_voices = not chat.remove_voices
    chat.save()
        